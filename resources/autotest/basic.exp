#!/usr/bin/expect

log_file ./autotest.log
set timeout 120
send_log "\nConnecting to bitscout serial socket..\n"

send "Please let the system boot (timeout 120 sec)..\n// "
spawn socat STDIO,echo=1 UNIX-CONNECT:./bitscout.serial.sock
set socatpid [exp_pid]

if { $socatpid > 0 } {
  send_log "autotest: Bitscout serial port socket was opened. QEMU serial port: OK"
} else {
  send_log "\nautotest: CRITICAL, failed to connect to bitscout serial port socket. QEMU serial port: ERROR"
  exit
}

send_log "\nBooting the system..\n"
expect { 
  "bitscout-host login:" { send_log "\nautotest: Login prompt found. System boot: OK\n"; }
  timeout { send_log "\nautotest: Timeout expired while waiting for login prompt. System boot: ERROR\n"; exit }
}
send "user\n"
expect "Password: "
send "\n"

send_log "Elevating to root user..\n"
send "sudo -i\n"
expect "root*bitscout-host*\$ "

#1. Test LXC container status
send_log "\nChecking if LXC container \"expert\" is running..\n"
send "lxc list\n"
expect {
  "expert *STOPPED" { send_log "\nautotest: LXC container is down. LXC check: ERROR\n"; exit } 
  "expert *RUNNING" { expect "\n"; send_log "autotest: LXC container is up. LXC check: OK\n"; }
  timeout { send_log "autotest: CRITICAL, timeout waiting for container. LXC check: ERROR"; exit }
}

#2. Test services status: openvpn, ssh, privexecd, historian, ...
send_log "Checking host system services status..\n"
#check openvpn@scout.service
send "systemctl --no-pager status openvpn@scout.service | tr -cd '\\11\\12\\15\\40-\\176' \n"
expect {
  "Active:*failed" { expect "\n"; send_log "\nautotest: OpenVPN service is not running. OpenVPN: ERROR\n"; }
  "Active:*active (running)" { expect "\n"; send_log "\nautotest: OpenVPN service is running. OpenVPN: OK\n"; }
}
expect "root*bitscout-host*\$ "

#check privexec.service
send "systemctl --no-pager status privexec.service | tr -cd '\\11\\12\\15\\40-\\176' \n"
expect {
  "Active:*failed" { expect "\n"; send_log "\nautotest: PrivExec service is not running. PrivExec: ERROR\n"; }
  "Active:*active (running)" { expect "\n"; send_log "\nautotest: PrivExec service is running. PrivExec: OK\n"; }
}
expect "root*bitscout-host*\$ "

#check historian.service
send "systemctl --no-pager status historian.service | tr -cd '\\11\\12\\15\\40-\\176' \n"
expect {
  "Active:*failed" { expect "\n"; send_log "\nautotest: Historian service is not running. Hostorian: ERROR\n"; }
  "Active:*active (running)" { expect "\n"; send_log "\nautotest: Historian service is running. Historian: OK\n"; }
}
expect "root*bitscout-host*\$ "

#check guest services
send_log "Checking guest system services status..\n"

#entering the guest container
send "lxc exec expert -- bash\n"
expect { 
  "root*bitscout*\$ " { send_log "\nautotest: Guest LXC container shell is available. LXC shell: OK\n"; }
  timeout { send_log "\nautotest: CRITICAL, couldn't enter the container shell. LXC shell: ERROR\n"; exit; } 
}

#check ssh.service
send "systemctl --no-pager status ssh.service | tr -cd '\\11\\12\\15\\40-\\176' \n"
expect {
  "Active: failed" { expect "\n"; send_log "\nautotest: Container's ssh service is not running. LXC SSH: ERROR\n"; }
  "Active: active (running)" { expect "\n"; send_log "\nautotest: Container's ssh service is running. LXC SSH: OK\n"; }
  -re "Active: inactive|Active: activating" { expect "root*bitscout*\$ "; sleep 1; send "systemctl --no-pager status ssh.service | tr -cd '\\11\\12\\15\\40-\\176' \n"; exp_continue; }
  timeout { send_log "\nautotest: SSH server is not running in the container. LXC SSH: ERROR\n"; exit }
}
expect "root*bitscout*\$ "

#The following is optional, uncomment the next line if you want to do manual checks
#interact

#exiting and shutting down the system
send "exit\n"
expect "root*@*bitscout*\$ "
send "poweroff -f\n\n"

expect {
  "Powering off." { send_log "\nautotest: Test graceful exit: OK\n" }
  timeout { send_log "\nautotest: Test graceful exit: ERROR\n" }
}

